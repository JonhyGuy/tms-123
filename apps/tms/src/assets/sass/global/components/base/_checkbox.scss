//
// Checkbox
//




// Config
$b404-checkbox-base-color: b404-base-color(grey, 1);

$b404-checkbox-config: (
	self: (
		transition: all 0.3s ease,
		size: 18px,
		tick: 6px
	),

	outline: (
		border: (
			default: darken($b404-checkbox-base-color, 12%),
			checked: darken($b404-checkbox-base-color, 15%)
		),
		tick: darken($b404-checkbox-base-color, 18%)
	),

	solid: (
		bg: (
			default: darken($b404-checkbox-base-color, 6%),
			checked: darken($b404-checkbox-base-color, 8%)
		),
		tick: darken($b404-checkbox-base-color, 30%)
	)
);

// Base
.b404-checkbox {
    display: inline-block;
    position: relative;
    padding-left: 30px;
    margin-bottom: 10px;
    text-align: left;
    cursor: pointer;
    font-size: 1rem;
    transition: b404-get($b404-checkbox-config, self, transition);

    &.b404-checkbox--disabled {
        opacity: 0.8;
        cursor: not-allowed;
    }

    // Hide default browser input
    > input {
        position: absolute;
        z-index: -1;
        opacity: 0;
    }

    > span {
        @include b404-rounded {
            border-radius: 3px;
        }

        background: none;
        position: absolute;
        top: 1px;
        left: 0;
        height: b404-get($b404-checkbox-config, self, size);
        width: b404-get($b404-checkbox-config, self, size);

        &:after {
            content:'';
            position: absolute;
            display: none; // Hide check
            top: 50%;
            left: 50%;
            margin-left: -2px;
            margin-top: -6px;
            width: 5px;
            height: 10px;
            border-width: 0 2px 2px 0#{'/*rtl:ignore*/'} !important;
            transform: rotate(45deg)#{'/*rtl:ignore*/'};
        }
    }

    > input:checked ~ span {
        transition: b404-get($b404-checkbox-config, self, transition);
        background: none;
        &:after {
            display: block;
        }
    }

    &:hover > input:not([disabled]):checked ~ span,
    > input:checked ~ span {
        transition: b404-get($b404-checkbox-config, self, transition);

    }

    > input:disabled ~ span {
        opacity: 0.6;
        pointer-events: none;
    }

    &.b404-checkbox--solid {
        > span {
            border: 1px solid transparent;
        }

        &:hover > input:not([disabled]) ~ span,
        > input:focus ~ span {
            transition: b404-get($b404-checkbox-config, self, transition);
        }
    }

    &.b404-checkbox--square {
        > span {
            border-radius: 0;
        }
    }

    &.b404-checkbox--bold > span {
        border-width: 2px !important;
        transition: b404-get($b404-checkbox-config, self, transition);
    }

    .form-inline & {
        margin-left: 15px;
        margin-right: 15px;
    }

    &.b404-checkbox--single {
        width: b404-get($b404-checkbox-config, self, size);
        height: b404-get($b404-checkbox-config, self, size);

        > span {
            top: 0px;
        }

        th > &,
        td > & {
            right: -5px;
        }
    }

    // Input group
    .input-group & {
        margin-bottom: 0 !important;
        padding-left: 0;
    }
}

.b404-checkbox-list {
    padding: 0 0;

    .form-horizontal .form-group & {
        padding-top: 0;
    }

    .b404-checkbox {
        text-align: left;
        display: block;

        &:last-child {
            margin-bottom: 5px;
        }
    }
}

.b404-checkbox-inline {
    padding: 0 0;

    .b404-checkbox {
        display: inline-block;
        margin-right: 15px;
        margin-bottom: 5px;

        &:last-child {
            margin-right: 0;
        }
    }
}

.form-group.row {
    .b404-checkbox-inline {
        margin-top: 0.75rem;
    }

    .b404-checkbox-list {
        margin-top: 2px;
    }
}

// Skin
@mixin b404-checkbox-theme(
    $outline-border-color,
    $outline-border-checked-color,
    $outline-tick-color,
    $solid-bg-color,
    $solid-bg-checked-color,
    $solid-tick-color) {

    &.b404-checkbox--disabled {
        opacity: 0.7;
    }

    // Outline
    > span {
        border: 1px solid $outline-border-color;

        &:after {
            border: solid $outline-tick-color;
        }
    }

    > input:disabled ~ span {
        &:after {
            border-color: $outline-border-checked-color;
        }
    }

    > input:checked ~ span {
        border: 1px solid $outline-border-checked-color;
    }

    &.b404-checkbox--bold > input:checked ~ span {
        border: 2px solid $outline-border-checked-color;
    }

    > input:disabled ~ span {
        opacity: 0.6;
    }

    // Solid
    &.b404-checkbox--solid {
        > span {
            background: $solid-bg-color;
            border: 1px solid transparent !important;

            &:after {
                border: solid $solid-tick-color;
            }
        }


        > input:focus ~ span {
            border: 1px solid transparent !important;
        }

        > input:checked ~ span {
            background: $solid-bg-checked-color;
        }
    }

    // Tick
    &.b404-checkbox--tick {
        > span {
            background:b404-get($b404-checkbox-config, solid, bg, default);
            border: 1px solid transparent !important;

            &:after {
                border: solid $solid-tick-color;
            }
        }

        > input:focus ~ span {
            border: 1px solid transparent !important;
        }

        > input:checked ~ span {
            border: 1px solid transparent !important;
            background: b404-get($b404-checkbox-config, solid, bg, default);

            &:after {
                border: solid $solid-bg-checked-color;
            }
        }
    }
}

// Default
.b404-checkbox {
    // Base
    @include b404-checkbox-theme(
        b404-get($b404-checkbox-config, outline, border, default),
        b404-get($b404-checkbox-config, outline, border, checked),
        b404-get($b404-checkbox-config, outline, tick),
        b404-get($b404-checkbox-config, solid, bg, default),
        b404-get($b404-checkbox-config, solid, bg, checked),
        b404-get($b404-checkbox-config, solid, tick)
    );

    // State Colors
    @each $name, $color in $b404-state-colors {
        // default state
        &.b404-checkbox--#{$name} {
            @include b404-checkbox-theme(
                b404-get($color, base),
                b404-get($color, base),
                b404-get($color, base),
                b404-get($color, base),
                b404-get($color, base),
                b404-get($color, inverse)
                );
        }
    }
}
