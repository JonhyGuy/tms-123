//
// Base
//



// Body
body {
	background: $b404-content-bg-color;
}

// Base
.b404-subheader {
	&.b404-subheader--clear {
		margin-bottom: 0 !important;
	}
}

// Desktop mode
@include b404-desktop {
	// Page
	.b404-wrapper {
		transition: b404-get($b404-aside-config, base, minimize, transition);

		// Fixed Header
		.b404-header--fixed & {
			padding-top: b404-get($b404-header-config, base, desktop, default, height);
		}

		// Fixed Content Head
		.b404-header--fixed.b404-subheader--fixed.b404-subheader--enabled & {
			padding-top: b404-get($b404-header-config, base, desktop, default, height) + b404-get($b404-subheader-config, fixed, height);
		}

		// Fixed Aside
		.b404-aside--fixed & {
			padding-left: b404-get($b404-aside-config, base, default, width);
		}

		// Minimize Aside
		.b404-aside--fixed.b404-aside--minimize & {
			padding-left: b404-get($b404-aside-config, base, minimize, width);
			transition: b404-get($b404-aside-config, base, minimize, transition);
		}
	}

	// Subheader
	.b404-subheader {		
		// Fixed subheader mode
		.b404-header--fixed.b404-subheader--fixed & {
			position: fixed;			
			height: b404-get($b404-subheader-config, fixed, height);
			top: b404-get($b404-header-config, base, desktop, default, height);
			left: 0;
			right: 0;
			transition: all 0.3s ease;
			z-index: b404-get($b404-header-config, base, desktop, fixed, zindex) - 3;
			background-color: #fff;
			box-shadow: 0px 10px 30px 0px rgba(82,63,105,0.08);
			margin: 0;
		}

		// Fixed header, minimized header and fixed subheader
		.b404-header--fixed.b404-header--minimize.b404-subheader--fixed & {
			top: b404-get($b404-header-config, base, desktop, fixed, minimizeHeight);
			transition: top 0.3s ease;
		}

		.b404-aside--enabled.b404-subheader--fixed & {
			left: b404-get($b404-aside-config, base, default, width);
		}
		
		.b404-subheader--fixed.b404-aside--minimize-hover &,
		.b404-subheader--fixed.b404-aside--minimize & {
			left: b404-get($b404-aside-config, base, minimize, width);
			transition: b404-get($b404-aside-config, base, minimize, transition);
		}
	}

	// Container 
	.b404-container {
		padding: 0 b404-get($b404-page-padding, desktop);
	}

	// Content & fixed subheader mode
	.b404-subheader--enabled:not(.b404-subheader--fixed) {
		.b404-content {
			padding-top: 0;
		}
	}
}

//
// Fixed container width change to fluid
// Aside removed
body:not(.b404-aside--enabled) {
	@include b404-media-range( lg, $b404-page-container-width + (2 * b404-get($b404-page-padding, desktop)) ) {
		.b404-container:not(.b404-container--fluid) {
			width: 100%;
		}
	}
}

// Default Aside
.b404-aside--enabled:not(.b404-aside--minimize) {
	@include b404-media-range( lg, $b404-page-container-width + $b404-aside-default-width + (2 * b404-get($b404-page-padding, desktop)) ) {
		.b404-container:not(.b404-container--fluid) {
			width: 100%;
		}
	}
}

// Minimized Aside
.b404-aside--enabled.b404-aside--minimize {
	@include b404-media-range( lg, $b404-page-container-width + $b404-aside-minimize-width + (2 * b404-get($b404-page-padding, desktop)) ) {
		.b404-container:not(.b404-container--fluid) {
			width: 100%;
		}
	}
}

// Tablet & mobile
@include b404-tablet-and-mobile {
	// Page
	.b404-wrapper {
		// Fixed Header
		.b404-header-mobile--fixed & {
			padding-top: b404-get($b404-header-config, base, mobile, self, default, height);
		}
	}

	// Container 
	.b404-container {
		padding: 0 b404-get($b404-page-padding, mobile);
	}

	// Content & fixed subheader mode
	.b404-subheader--enabled {
		.b404-content {
			padding-top: 0;
		}
	}

	.b404-subheader--enabled.b404-subheader--solid {
		.b404-subheader {		
			margin-bottom: b404-get($b404-page-padding, mobile);
		}
	}
}